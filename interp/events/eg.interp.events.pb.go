// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: eg.interp.events.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task_State int32

const (
	Task_Pending   Task_State = 0
	Task_Initiated Task_State = 1
	Task_Completed Task_State = 2
	Task_Error     Task_State = 1000
)

// Enum value maps for Task_State.
var (
	Task_State_name = map[int32]string{
		0:    "Pending",
		1:    "Initiated",
		2:    "Completed",
		1000: "Error",
	}
	Task_State_value = map[string]int32{
		"Pending":   0,
		"Initiated": 1,
		"Completed": 2,
		"Error":     1000,
	}
)

func (x Task_State) Enum() *Task_State {
	p := new(Task_State)
	*p = x
	return p
}

func (x Task_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_State) Descriptor() protoreflect.EnumDescriptor {
	return file_eg_interp_events_proto_enumTypes[0].Descriptor()
}

func (Task_State) Type() protoreflect.EnumType {
	return &file_eg_interp_events_proto_enumTypes[0]
}

func (x Task_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_State.Descriptor instead.
func (Task_State) EnumDescriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{3, 0}
}

type RunMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RunMetadata) Reset() {
	*x = RunMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunMetadata) ProtoMessage() {}

func (x *RunMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunMetadata.ProtoReflect.Descriptor instead.
func (*RunMetadata) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{0}
}

func (x *RunMetadata) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type LogHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major int32 `protobuf:"varint,1,opt,name=Major,proto3" json:"Major,omitempty"`
	Minor int32 `protobuf:"varint,2,opt,name=Minor,proto3" json:"Minor,omitempty"`
	Patch int32 `protobuf:"varint,3,opt,name=Patch,proto3" json:"Patch,omitempty"`
	Sts   int64 `protobuf:"varint,4,opt,name=sts,proto3" json:"sts,omitempty"`
	Ets   int64 `protobuf:"varint,5,opt,name=ets,proto3" json:"ets,omitempty"`
}

func (x *LogHeader) Reset() {
	*x = LogHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogHeader) ProtoMessage() {}

func (x *LogHeader) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogHeader.ProtoReflect.Descriptor instead.
func (*LogHeader) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{1}
}

func (x *LogHeader) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *LogHeader) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *LogHeader) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *LogHeader) GetSts() int64 {
	if x != nil {
		return x.Sts
	}
	return 0
}

func (x *LogHeader) GetEts() int64 {
	if x != nil {
		return x.Ets
	}
	return 0
}

// heartbeat event
type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{2}
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid         string     `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Description string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	State       Task_State `protobuf:"varint,4,opt,name=state,proto3,enum=eg.interp.events.Task_State" json:"state,omitempty"`
	Deadline    int64      `protobuf:"varint,5,opt,name=deadline,proto3" json:"deadline,omitempty"` // unix timestamp.
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetState() Task_State {
	if x != nil {
		return x.State
	}
	return Task_Pending
}

func (x *Task) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

// Represents every message recorded when executing a job
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ts int64  `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"` // unix timestamp.
	// Types that are assignable to Event:
	//
	//	*Message_Preamble
	//	*Message_Heartbeat
	//	*Message_Task
	Event isMessage_Event `protobuf_oneof:"Event"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{4}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (m *Message) GetEvent() isMessage_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Message) GetPreamble() *LogHeader {
	if x, ok := x.GetEvent().(*Message_Preamble); ok {
		return x.Preamble
	}
	return nil
}

func (x *Message) GetHeartbeat() *Heartbeat {
	if x, ok := x.GetEvent().(*Message_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *Message) GetTask() *Task {
	if x, ok := x.GetEvent().(*Message_Task); ok {
		return x.Task
	}
	return nil
}

type isMessage_Event interface {
	isMessage_Event()
}

type Message_Preamble struct {
	Preamble *LogHeader `protobuf:"bytes,100,opt,name=preamble,proto3,oneof"`
}

type Message_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,101,opt,name=heartbeat,proto3,oneof"`
}

type Message_Task struct {
	Task *Task `protobuf:"bytes,102,opt,name=task,proto3,oneof"`
}

func (*Message_Preamble) isMessage_Event() {}

func (*Message_Heartbeat) isMessage_Event() {}

func (*Message_Task) isMessage_Event() {}

type RunUploadChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Checksum []byte `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// Types that are assignable to InitialChunkMetadata:
	//
	//	*RunUploadChunk_None
	//	*RunUploadChunk_Metadata_
	InitialChunkMetadata isRunUploadChunk_InitialChunkMetadata `protobuf_oneof:"initialChunkMetadata"`
}

func (x *RunUploadChunk) Reset() {
	*x = RunUploadChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunUploadChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunUploadChunk) ProtoMessage() {}

func (x *RunUploadChunk) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunUploadChunk.ProtoReflect.Descriptor instead.
func (*RunUploadChunk) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{5}
}

func (x *RunUploadChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RunUploadChunk) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (m *RunUploadChunk) GetInitialChunkMetadata() isRunUploadChunk_InitialChunkMetadata {
	if m != nil {
		return m.InitialChunkMetadata
	}
	return nil
}

func (x *RunUploadChunk) GetNone() bool {
	if x, ok := x.GetInitialChunkMetadata().(*RunUploadChunk_None); ok {
		return x.None
	}
	return false
}

func (x *RunUploadChunk) GetMetadata() *RunUploadChunk_Metadata {
	if x, ok := x.GetInitialChunkMetadata().(*RunUploadChunk_Metadata_); ok {
		return x.Metadata
	}
	return nil
}

type isRunUploadChunk_InitialChunkMetadata interface {
	isRunUploadChunk_InitialChunkMetadata()
}

type RunUploadChunk_None struct {
	None bool `protobuf:"varint,3,opt,name=none,proto3,oneof"`
}

type RunUploadChunk_Metadata_ struct {
	Metadata *RunUploadChunk_Metadata `protobuf:"bytes,4,opt,name=metadata,proto3,oneof"`
}

func (*RunUploadChunk_None) isRunUploadChunk_InitialChunkMetadata() {}

func (*RunUploadChunk_Metadata_) isRunUploadChunk_InitialChunkMetadata() {}

type RunUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Run *RunMetadata `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
}

func (x *RunUploadResponse) Reset() {
	*x = RunUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunUploadResponse) ProtoMessage() {}

func (x *RunUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunUploadResponse.ProtoReflect.Descriptor instead.
func (*RunUploadResponse) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{6}
}

func (x *RunUploadResponse) GetRun() *RunMetadata {
	if x != nil {
		return x.Run
	}
	return nil
}

type RunLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Run *RunMetadata `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
}

func (x *RunLogRequest) Reset() {
	*x = RunLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLogRequest) ProtoMessage() {}

func (x *RunLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLogRequest.ProtoReflect.Descriptor instead.
func (*RunLogRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{7}
}

func (x *RunLogRequest) GetRun() *RunMetadata {
	if x != nil {
		return x.Run
	}
	return nil
}

type RunLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *RunLogResponse) Reset() {
	*x = RunLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLogResponse) ProtoMessage() {}

func (x *RunLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLogResponse.ProtoReflect.Descriptor instead.
func (*RunLogResponse) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{8}
}

func (x *RunLogResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type RunInitiateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunInitiateRequest) Reset() {
	*x = RunInitiateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInitiateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInitiateRequest) ProtoMessage() {}

func (x *RunInitiateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInitiateRequest.ProtoReflect.Descriptor instead.
func (*RunInitiateRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{9}
}

type RunInitiateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunInitiateResult) Reset() {
	*x = RunInitiateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInitiateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInitiateResult) ProtoMessage() {}

func (x *RunInitiateResult) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInitiateResult.ProtoReflect.Descriptor instead.
func (*RunInitiateResult) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{10}
}

type RunCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunCancelRequest) Reset() {
	*x = RunCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCancelRequest) ProtoMessage() {}

func (x *RunCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCancelRequest.ProtoReflect.Descriptor instead.
func (*RunCancelRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{11}
}

type RunCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunCancelResponse) Reset() {
	*x = RunCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCancelResponse) ProtoMessage() {}

func (x *RunCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCancelResponse.ProtoReflect.Descriptor instead.
func (*RunCancelResponse) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{12}
}

type RunWatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Run *RunMetadata `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
}

func (x *RunWatchRequest) Reset() {
	*x = RunWatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWatchRequest) ProtoMessage() {}

func (x *RunWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWatchRequest.ProtoReflect.Descriptor instead.
func (*RunWatchRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{13}
}

func (x *RunWatchRequest) GetRun() *RunMetadata {
	if x != nil {
		return x.Run
	}
	return nil
}

type DispatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *DispatchRequest) Reset() {
	*x = DispatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchRequest) ProtoMessage() {}

func (x *DispatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchRequest.ProtoReflect.Descriptor instead.
func (*DispatchRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{14}
}

func (x *DispatchRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type DispatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DispatchResponse) Reset() {
	*x = DispatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchResponse) ProtoMessage() {}

func (x *DispatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchResponse.ProtoReflect.Descriptor instead.
func (*DispatchResponse) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{15}
}

type RunUploadChunk_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes    uint64 `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Checksum []byte `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *RunUploadChunk_Metadata) Reset() {
	*x = RunUploadChunk_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eg_interp_events_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunUploadChunk_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunUploadChunk_Metadata) ProtoMessage() {}

func (x *RunUploadChunk_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunUploadChunk_Metadata.ProtoReflect.Descriptor instead.
func (*RunUploadChunk_Metadata) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{5, 0}
}

func (x *RunUploadChunk_Metadata) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *RunUploadChunk_Metadata) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

var File_eg_interp_events_proto protoreflect.FileDescriptor

var file_eg_interp_events_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x1d, 0x0a, 0x0b, 0x52, 0x75,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x09, 0x4c, 0x6f, 0x67,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x69, 0x6e,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x74, 0x73, 0x22, 0x0b, 0x0a, 0x09,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x3e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0xe8, 0x07, 0x22, 0xd8, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x12, 0x3b, 0x0a,
	0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0xf5, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65,
	0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x52, 0x75, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x42, 0x16, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a, 0x11, 0x52, 0x75, 0x6e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x67,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52,
	0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x03, 0x72, 0x75, 0x6e, 0x22,
	0x40, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x03, 0x72, 0x75,
	0x6e, 0x22, 0x2a, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x14, 0x0a,
	0x12, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11,
	0x52, 0x75, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x42, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x03, 0x72, 0x75, 0x6e, 0x22, 0x48, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x67, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22,
	0x12, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xcb, 0x02, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a,
	0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x23, 0x2e, 0x65, 0x67, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x12, 0x53, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x22, 0x2e, 0x65,
	0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x52, 0x75, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x1f, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x21, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x32, 0x5d, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x21, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x67, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x32, 0x5d, 0x0a, 0x06, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x08, 0x44, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x21, 0x2e, 0x65, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x67, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eg_interp_events_proto_rawDescOnce sync.Once
	file_eg_interp_events_proto_rawDescData = file_eg_interp_events_proto_rawDesc
)

func file_eg_interp_events_proto_rawDescGZIP() []byte {
	file_eg_interp_events_proto_rawDescOnce.Do(func() {
		file_eg_interp_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_eg_interp_events_proto_rawDescData)
	})
	return file_eg_interp_events_proto_rawDescData
}

var file_eg_interp_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eg_interp_events_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_eg_interp_events_proto_goTypes = []interface{}{
	(Task_State)(0),                 // 0: eg.interp.events.Task.State
	(*RunMetadata)(nil),             // 1: eg.interp.events.RunMetadata
	(*LogHeader)(nil),               // 2: eg.interp.events.LogHeader
	(*Heartbeat)(nil),               // 3: eg.interp.events.Heartbeat
	(*Task)(nil),                    // 4: eg.interp.events.Task
	(*Message)(nil),                 // 5: eg.interp.events.Message
	(*RunUploadChunk)(nil),          // 6: eg.interp.events.RunUploadChunk
	(*RunUploadResponse)(nil),       // 7: eg.interp.events.RunUploadResponse
	(*RunLogRequest)(nil),           // 8: eg.interp.events.RunLogRequest
	(*RunLogResponse)(nil),          // 9: eg.interp.events.RunLogResponse
	(*RunInitiateRequest)(nil),      // 10: eg.interp.events.RunInitiateRequest
	(*RunInitiateResult)(nil),       // 11: eg.interp.events.RunInitiateResult
	(*RunCancelRequest)(nil),        // 12: eg.interp.events.RunCancelRequest
	(*RunCancelResponse)(nil),       // 13: eg.interp.events.RunCancelResponse
	(*RunWatchRequest)(nil),         // 14: eg.interp.events.RunWatchRequest
	(*DispatchRequest)(nil),         // 15: eg.interp.events.DispatchRequest
	(*DispatchResponse)(nil),        // 16: eg.interp.events.DispatchResponse
	(*RunUploadChunk_Metadata)(nil), // 17: eg.interp.events.RunUploadChunk.Metadata
}
var file_eg_interp_events_proto_depIdxs = []int32{
	0,  // 0: eg.interp.events.Task.state:type_name -> eg.interp.events.Task.State
	2,  // 1: eg.interp.events.Message.preamble:type_name -> eg.interp.events.LogHeader
	3,  // 2: eg.interp.events.Message.heartbeat:type_name -> eg.interp.events.Heartbeat
	4,  // 3: eg.interp.events.Message.task:type_name -> eg.interp.events.Task
	17, // 4: eg.interp.events.RunUploadChunk.metadata:type_name -> eg.interp.events.RunUploadChunk.Metadata
	1,  // 5: eg.interp.events.RunUploadResponse.run:type_name -> eg.interp.events.RunMetadata
	1,  // 6: eg.interp.events.RunLogRequest.run:type_name -> eg.interp.events.RunMetadata
	1,  // 7: eg.interp.events.RunWatchRequest.run:type_name -> eg.interp.events.RunMetadata
	5,  // 8: eg.interp.events.DispatchRequest.messages:type_name -> eg.interp.events.Message
	6,  // 9: eg.interp.events.Agent.Upload:input_type -> eg.interp.events.RunUploadChunk
	12, // 10: eg.interp.events.Agent.Cancel:input_type -> eg.interp.events.RunCancelRequest
	8,  // 11: eg.interp.events.Agent.Logs:input_type -> eg.interp.events.RunLogRequest
	14, // 12: eg.interp.events.Agent.Watch:input_type -> eg.interp.events.RunWatchRequest
	15, // 13: eg.interp.events.Events.Dispatch:input_type -> eg.interp.events.DispatchRequest
	15, // 14: eg.interp.events.Runner.Dispatch:input_type -> eg.interp.events.DispatchRequest
	7,  // 15: eg.interp.events.Agent.Upload:output_type -> eg.interp.events.RunUploadResponse
	13, // 16: eg.interp.events.Agent.Cancel:output_type -> eg.interp.events.RunCancelResponse
	9,  // 17: eg.interp.events.Agent.Logs:output_type -> eg.interp.events.RunLogResponse
	5,  // 18: eg.interp.events.Agent.Watch:output_type -> eg.interp.events.Message
	16, // 19: eg.interp.events.Events.Dispatch:output_type -> eg.interp.events.DispatchResponse
	16, // 20: eg.interp.events.Runner.Dispatch:output_type -> eg.interp.events.DispatchResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_eg_interp_events_proto_init() }
func file_eg_interp_events_proto_init() {
	if File_eg_interp_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eg_interp_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunUploadChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInitiateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInitiateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunWatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eg_interp_events_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunUploadChunk_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eg_interp_events_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Message_Preamble)(nil),
		(*Message_Heartbeat)(nil),
		(*Message_Task)(nil),
	}
	file_eg_interp_events_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*RunUploadChunk_None)(nil),
		(*RunUploadChunk_Metadata_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eg_interp_events_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_eg_interp_events_proto_goTypes,
		DependencyIndexes: file_eg_interp_events_proto_depIdxs,
		EnumInfos:         file_eg_interp_events_proto_enumTypes,
		MessageInfos:      file_eg_interp_events_proto_msgTypes,
	}.Build()
	File_eg_interp_events_proto = out.File
	file_eg_interp_events_proto_rawDesc = nil
	file_eg_interp_events_proto_goTypes = nil
	file_eg_interp_events_proto_depIdxs = nil
}
